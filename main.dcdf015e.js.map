{"version":3,"sources":["main.js"],"names":["window","iframeURL","link","linkSplit","split","includes","encodeURIComponent","showModal","element","modal","document","querySelector","iframe","linkDirect","setAttribute","dataset","video","style","display","closeModal","HTMLImageElement","prototype","macy","Macy","container","trueOrder","waitForImages","margin","columns","breakAt","e","console","debug","heroImage","cards","querySelectorAll","iobs","IntersectionObserver","entries","observe","forEach","entry","isIntersecting","target","classList","scrollTo","behavior","top","card","img","childNodes","src","add","remove","unobserve","recalculate","images","script","createElement","async","body","appendChild"],"mappings":";AA8BA,GA9BAA,OAAOC,UAAY,SAAmBC,GAC9BC,IAAAA,EAAYD,EAAKE,MAAM,KACzBD,OAAAA,EAAU,GAAGE,SAAS,SACYF,6BAAAA,OAAAA,EAAU,IAE5CA,EAAU,GAAGE,SAAS,YACkCC,mDAAAA,OAAAA,mBACxDJ,GADF,8CADEC,GAONH,OAAOO,UAAY,SAAmBC,GAC9BC,IAAAA,EAAQC,SAASC,cAAc,gBAC/BC,EAASF,SAASC,cAAc,6BAChCE,EAAaH,SAASC,cAC1B,iDAEFC,EAAOE,aAAa,MAAOb,UAAUO,EAAQO,QAAQC,QACrDP,EAAMQ,MAAMC,QAAU,QACtBL,EAAWC,aAAa,OAAQN,EAAQO,QAAQC,QAGlDhB,OAAOmB,WAAa,WACZV,IAAAA,EAAQC,SAASC,cAAc,gBAC/BC,EAASF,SAASC,cAAc,6BACtCF,EAAMQ,MAAQ,gBACdL,EAAOE,aAAa,MAAO,KAGzB,YAAaM,iBAAiBC,UAE5B,GAAA,yBAA0BrB,OAAQ,CAEhCsB,IAAAA,EAAO,KAEP,IACDC,OACHD,EAAOC,KAAK,CACXC,UAAW,mBACXC,WAAW,EACXC,eAAe,EACfC,OAAQ,GACRC,QAAS,EACTC,QAAS,CACH,IAAA,EACA,IAAA,MAIL,MAAOC,GACPC,QAAQC,MAAMF,GAGVG,IAAAA,EAAYvB,SAASC,cAAc,eACnCuB,EAAQxB,SAASyB,iBAAiB,0BAClCC,EAAO,IAAIC,qBAAqB,SAACC,EAASC,GAC9CD,EAAQE,QAAQ,SAACC,GACXA,GAAAA,EAAMC,eACJD,GAA0B,cAA1BA,EAAME,OAAOC,UACf5C,OAAO6C,SAAS,CAAEC,SAAU,SAAUC,IAAK,QACtC,CACDC,IAAAA,EAAOP,EAAME,OACbM,EAAMR,EAAME,OAAOO,WAAW,GAClCD,EAAIE,IAAMF,EAAIlC,QAAQoC,IACtBH,EAAKJ,UAAUQ,IAAI,qBACnBJ,EAAKJ,UAAUQ,IAAI,mBACnBH,EAAIL,UAAUS,OAAO,YACrBjB,EAAKkB,UAAUN,GACf1B,GAAQA,EAAKiC,aAAejC,EAAKiC,aAAY,QAKrDnB,EAAKG,QAAQN,GACbC,EAAMM,QAAQ,SAACQ,GAASZ,OAAAA,EAAKG,QAAQS,SAChC,CACCQ,IAAAA,EAAS9C,SAASyB,iBAAiB,gBACzCqB,EAAOhB,QAAQ,SAACS,GACdA,EAAIE,IAAMF,EAAIlC,QAAQoC,UAGrB,CAEDM,IAAAA,EAAS/C,SAASgD,cAAc,UACpCD,EAAOE,OAAQ,EACfF,EAAON,IACL,0EACFzC,SAASkD,KAAKC,YAAYJ","file":"main.dcdf015e.js","sourceRoot":"../src","sourcesContent":["window.iframeURL = function iframeURL(link) {\n  const linkSplit = link.split('/');\n  if (linkSplit[2].includes('youtu')) {\n    return `https://youtube.com/embed/${linkSplit[3]}`;\n  }\n  if (linkSplit[2].includes('facebook')) {\n    return `https://www.facebook.com/plugins/video.php?href=${encodeURIComponent(\n      link\n    )}&show_text=false&width=734&height=400`;\n  }\n};\n\nwindow.showModal = function showModal(element) {\n  const modal = document.querySelector('#modal-video');\n  const iframe = document.querySelector('#modal-video .card iframe');\n  const linkDirect = document.querySelector(\n    '#modal-video .card .card-body .card-actions a'\n  );\n  iframe.setAttribute('src', iframeURL(element.dataset.video));\n  modal.style.display = 'block';\n  linkDirect.setAttribute('href', element.dataset.video);\n};\n\nwindow.closeModal = function closeModal() {\n  const modal = document.querySelector('#modal-video');\n  const iframe = document.querySelector('#modal-video .card iframe');\n  modal.style = 'display:none;';\n  iframe.setAttribute('src', '');\n};\n\nif ('loading' in HTMLImageElement.prototype) {\n  // Intersection Observer Validation\n  if ('IntersectionObserver' in window) {\n    // Initiate Masonry Library\n    let macy = null;\n\n    try {\n\t\t\tif (Macy) {\n\t\t\t\tmacy = Macy({\n\t\t\t\t\tcontainer: '#content-speaker',\n\t\t\t\t\ttrueOrder: false,\n\t\t\t\t\twaitForImages: true,\n\t\t\t\t\tmargin: 20,\n\t\t\t\t\tcolumns: 3,\n\t\t\t\t\tbreakAt: {\n\t\t\t\t\t\t520: 1,\n\t\t\t\t\t\t400: 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n    } catch (e) {\n      console.debug(e);\n    }\n\n    const heroImage = document.querySelector('.hero-image');\n    const cards = document.querySelectorAll('#content-speaker .card'); // Select All Card Element on Content Speaker Section\n    const iobs = new IntersectionObserver((entries, observe) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          if (entry.target.classList == 'hero-image') {\n            window.scrollTo({ behavior: 'smooth', top: 0 });\n          } else {\n            let card = entry.target;\n            let img = entry.target.childNodes[0];\n            img.src = img.dataset.src;\n            card.classList.add('animate__animated');\n            card.classList.add('animate__zoomIn');\n            img.classList.remove('lazyload');\n            iobs.unobserve(card);\n            macy && macy.recalculate && macy.recalculate(true); // Recalculate Masonry when element is intersecting\n          }\n        }\n      });\n    });\n    iobs.observe(heroImage);\n    cards.forEach((card) => iobs.observe(card));\n  } else {\n    const images = document.querySelectorAll('img.lazyload');\n    images.forEach((img) => {\n      img.src = img.dataset.src;\n    });\n  }\n} else {\n  // Dynamically import the LazySizes library\n  let script = document.createElement('script');\n  script.async = true;\n  script.src =\n    'https://cdnjs.cloudflare.com/ajax/libs/lazysizes/4.1.8/lazysizes.min.js';\n  document.body.appendChild(script);\n}\n"]}